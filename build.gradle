plugins {
    id 'org.springframework.boot' version '2.7.4'
    id 'io.spring.dependency-management' version '1.0.14.RELEASE'
    id 'java'
}

apply from: 'version.gradle'

group 'com.kh'
version '0.0.1-SNAPSHOT'

springBoot {
    mainClass = 'com.kh.fitness.FitnessApplication'
}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation "org.springdoc:springdoc-openapi-ui:${versions.springdoc}"
    implementation "org.springdoc:springdoc-openapi-security:${versions.springdoc}"
    implementation 'org.postgresql:postgresql'
    implementation 'org.liquibase:liquibase-core'
    implementation "org.mapstruct:mapstruct:${versions.mapstruct}"

    compileOnly 'org.springframework.boot:spring-boot-configuration-processor'
    compileOnly 'org.projectlombok:lombok'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:${versions.mapstruct}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation "org.testcontainers:postgresql:${versions.testcontainers}"

    testCompileOnly 'org.projectlombok:lombok'

    testAnnotationProcessor 'org.projectlombok:lombok'
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${versions.mapstruct}"

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

compileJava.options.encoding = 'UTF-8'
compileJava {
    options.compilerArgs += [
            '-Amapstruct.defaultComponentModel=spring',
            '-Amapstruct.defaultInjectionStrategy=constructor'
    ]
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.encoding 'UTF-8'
}

wrapper {
    gradleVersion '7.5'
}